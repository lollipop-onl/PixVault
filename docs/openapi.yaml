openapi: 3.0.3
info:
  title: PixVault API
  description: API for managing photos and videos with long-term storage in AWS S3 Glacier
  version: 1.0.0
  contact:
    name: PixVault Team
servers:
  - url: http://localhost:9000/api
    description: Local development server
  - url: https://api.pixvault.app
    description: Production server

paths:
  /health:
    get:
      summary: Health check endpoint
      tags:
        - System
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ok"
                  timestamp:
                    type: string
                    format: date-time
                    example: "2024-12-15T10:30:45.123Z"

  /auth/login:
    post:
      summary: User login
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: "tanaka.yuki@example.com"
                password:
                  type: string
                  format: password
                  example: "SecurePass123!"
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Invalid credentials


  /auth/refresh:
    post:
      summary: Refresh access token
      tags:
        - Authentication
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refreshToken
              properties:
                refreshToken:
                  type: string
                  example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI3ZjJhNGI4ZS0xMjM0LTU2NzgtOTBhYi1jZGVmMTIzNDU2NzgiLCJ0eXBlIjoicmVmcmVzaCIsImlhdCI6MTczNDI1ODY0NX0.refresh_token_signature"
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'

  /media:
    get:
      summary: List media items
      tags:
        - Media
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
            minimum: 1
            example: 2
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
            minimum: 1
            maximum: 100
            example: 50
        - name: type
          in: query
          schema:
            type: string
            enum: [photo, video, all]
            default: all
            example: photo
        - name: tags
          in: query
          schema:
            type: array
            items:
              type: string
            example: ["家族", "旅行", "京都"]
          style: form
          explode: true
        - name: dateFrom
          in: query
          schema:
            type: string
            format: date
            example: "2024-01-01"
        - name: dateTo
          in: query
          schema:
            type: string
            format: date
            example: "2024-12-31"
      responses:
        '200':
          description: List of media items
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/MediaItem'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                example:
                  items:
                    - id: "a1b2c3d4-1234-5678-90ab-cdef12345678"
                      userId: "7f2a4b8e-1234-5678-90ab-cdef12345678"
                      type: "photo"
                      filename: "a1b2c3d4-1234-5678-90ab-cdef12345678.jpg"
                      originalFilename: "DSC_4892.jpg"
                      mimeType: "image/jpeg"
                      size: 8547632
                      width: 6000
                      height: 4000
                      duration: null
                      description: "娘の入学式での記念撮影"
                      tags: ["桜", "春", "家族写真", "2024年"]
                      location:
                        latitude: 35.0116
                        longitude: 135.7681
                        placeName: "京都府京都市下京区七条通烏丸西入東塩小路町"
                      metadata:
                        camera: "NIKON D850"
                        lens: "NIKKOR Z 24-70mm f/2.8 S"
                        iso: 400
                        aperture: 5.6
                        shutterSpeed: "1/250"
                        focalLength: 50
                      storageClass: "STANDARD"
                      storageStatus: "ACTIVE"
                      thumbnailUrl: "https://pixvault-media.s3.ap-northeast-1.amazonaws.com/users/7f2a4b8e-1234-5678-90ab-cdef12345678/media/a1b2c3d4-1234-5678-90ab-cdef12345678/thumbnail.jpg"
                      previewUrl: "https://pixvault-media.s3.ap-northeast-1.amazonaws.com/users/7f2a4b8e-1234-5678-90ab-cdef12345678/media/a1b2c3d4-1234-5678-90ab-cdef12345678/preview.jpg"
                      originalUrl: "https://pixvault-media.s3.ap-northeast-1.amazonaws.com/users/7f2a4b8e-1234-5678-90ab-cdef12345678/media/a1b2c3d4-1234-5678-90ab-cdef12345678/original.jpg"
                      capturedAt: "2024-04-08T09:30:00.000Z"
                      uploadedAt: "2024-04-08T14:15:30.123Z"
                      archivedAt: null
                      lastAccessedAt: "2024-12-15T10:00:00.000Z"
                    - id: "b2c3d4e5-2345-6789-01bc-def234567890"
                      userId: "7f2a4b8e-1234-5678-90ab-cdef12345678"
                      type: "video"
                      filename: "b2c3d4e5-2345-6789-01bc-def234567890.mp4"
                      originalFilename: "VID_20240408_1045.mp4"
                      mimeType: "video/mp4"
                      size: 125678432
                      width: 1920
                      height: 1080
                      duration: 45.3
                      description: "京都の清水寺での家族旅行"
                      tags: ["旅行", "京都", "清水寺", "家族", "動画"]
                      location:
                        latitude: 34.9948
                        longitude: 135.7850
                        placeName: "京都府京都市東山区清水"
                      metadata:
                        camera: "iPhone 15 Pro Max"
                        lens: null
                        iso: null
                        aperture: null
                        shutterSpeed: null
                        focalLength: null
                      storageClass: "GLACIER"
                      storageStatus: "ARCHIVED"
                      thumbnailUrl: "https://pixvault-media.s3.ap-northeast-1.amazonaws.com/users/7f2a4b8e-1234-5678-90ab-cdef12345678/media/b2c3d4e5-2345-6789-01bc-def234567890/thumbnail.jpg"
                      previewUrl: "https://pixvault-media.s3.ap-northeast-1.amazonaws.com/users/7f2a4b8e-1234-5678-90ab-cdef12345678/media/b2c3d4e5-2345-6789-01bc-def234567890/preview.mp4"
                      originalUrl: null
                      capturedAt: "2024-04-08T10:45:00.000Z"
                      uploadedAt: "2024-04-08T15:20:15.456Z"
                      archivedAt: "2024-06-08T00:00:00.000Z"
                      lastAccessedAt: "2024-06-07T18:30:00.000Z"
                  pagination:
                    page: 2
                    limit: 50
                    total: 4523
                    totalPages: 91

    post:
      summary: Upload new media
      tags:
        - Media
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  format: binary
                  description: "The photo or video file to upload (JPEG, PNG, HEIC, MP4, MOV, etc.)"
                tags:
                  type: array
                  items:
                    type: string
                  example: ["桜", "春", "家族写真", "2024年"]
                description:
                  type: string
                  example: "娘の入学式での記念撮影"
                location:
                  type: object
                  properties:
                    latitude:
                      type: number
                      example: 35.0116
                    longitude:
                      type: number
                      example: 135.7681
                  example:
                    latitude: 35.0116
                    longitude: 135.7681
                capturedAt:
                  type: string
                  format: date-time
                  example: "2024-04-08T09:30:00.000Z"
      responses:
        '201':
          description: Media uploaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaItem'
        '400':
          description: Invalid file or request
        '413':
          description: File too large

  /media/{id}:
    get:
      summary: Get media details
      tags:
        - Media
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: "a1b2c3d4-1234-5678-90ab-cdef12345678"
      responses:
        '200':
          description: Media details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaItem'
        '404':
          description: Media not found

    put:
      summary: Update media metadata
      tags:
        - Media
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: "a1b2c3d4-1234-5678-90ab-cdef12345678"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  example: "清水寺での家族旅行の思い出"
                tags:
                  type: array
                  items:
                    type: string
                  example: ["旅行", "京都", "清水寺", "家族"]
                location:
                  type: object
                  properties:
                    latitude:
                      type: number
                      example: 34.9948
                    longitude:
                      type: number
                      example: 135.7850
                  example:
                    latitude: 34.9948
                    longitude: 135.7850
      responses:
        '200':
          description: Media updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaItem'
        '404':
          description: Media not found

    delete:
      summary: Delete media
      tags:
        - Media
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: "a1b2c3d4-1234-5678-90ab-cdef12345678"
      responses:
        '204':
          description: Media deleted successfully
        '404':
          description: Media not found

  /media/{id}/download:
    get:
      summary: Download media file
      tags:
        - Media
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: "a1b2c3d4-1234-5678-90ab-cdef12345678"
        - name: quality
          in: query
          schema:
            type: string
            enum: [original, high, medium, low, thumbnail]
            default: original
            example: high
      responses:
        '200':
          description: Media file
          content:
            image/*:
              schema:
                type: string
                format: binary
            video/*:
              schema:
                type: string
                format: binary
        '302':
          description: Redirect to presigned URL
          headers:
            Location:
              schema:
                type: string
                example: "https://pixvault-media.s3.ap-northeast-1.amazonaws.com/users/7f2a4b8e-1234-5678-90ab-cdef12345678/media/a1b2c3d4-1234-5678-90ab-cdef12345678/DSC_4892.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=..."
        '404':
          description: Media not found

  /media/{id}/archive:
    post:
      summary: Archive media to Glacier
      tags:
        - Media
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: "a1b2c3d4-1234-5678-90ab-cdef12345678"
      responses:
        '202':
          description: Archive process started
          content:
            application/json:
              schema:
                type: object
                properties:
                  jobId:
                    type: string
                    example: "job_archive_20241215_a1b2c3d4"
                  estimatedCompletionTime:
                    type: string
                    format: date-time
                    example: "2024-12-15T11:45:00.000Z"
        '404':
          description: Media not found

  /media/{id}/restore:
    post:
      summary: Restore media from Glacier
      tags:
        - Media
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: "a1b2c3d4-1234-5678-90ab-cdef12345678"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tier:
                  type: string
                  enum: [Expedited, Standard, Bulk]
                  default: Standard
                  example: Standard
      responses:
        '202':
          description: Restore process started
          content:
            application/json:
              schema:
                type: object
                properties:
                  jobId:
                    type: string
                    example: "job_restore_20241215_a1b2c3d4"
                  estimatedCompletionTime:
                    type: string
                    format: date-time
                    example: "2024-12-15T16:30:00.000Z"
                  estimatedCost:
                    type: number
                    example: 0.03
        '404':
          description: Media not found


  /storage/stats:
    get:
      summary: Get storage statistics
      tags:
        - Storage
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Storage statistics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageStats'

  /jobs/{id}:
    get:
      summary: Get job status
      tags:
        - Jobs
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "job_archive_20241215_a1b2c3d4"
      responses:
        '200':
          description: Job status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '404':
          description: Job not found

components:
  schemas:
    AuthResponse:
      type: object
      example:
        accessToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI3ZjJhNGI4ZS0xMjM0LTU2NzgtOTBhYi1jZGVmMTIzNDU2NzgiLCJlbWFpbCI6InRhbmFrYS55dWtpQGV4YW1wbGUuY29tIiwiaWF0IjoxNzM0MjU4NjQ1LCJleHAiOjE3MzQyNjIyNDV9.access_token_signature"
        refreshToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI3ZjJhNGI4ZS0xMjM0LTU2NzgtOTBhYi1jZGVmMTIzNDU2NzgiLCJ0eXBlIjoicmVmcmVzaCIsImlhdCI6MTczNDI1ODY0NX0.refresh_token_signature"
        expiresIn: 3600
        user:
          id: "7f2a4b8e-1234-5678-90ab-cdef12345678"
          email: "tanaka.yuki@example.com"
          name: "田中 由紀"
          createdAt: "2023-01-15T08:00:00.000Z"
          storageQuota: 107374182400
          storageUsed: 45678901234
      properties:
        accessToken:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI3ZjJhNGI4ZS0xMjM0LTU2NzgtOTBhYi1jZGVmMTIzNDU2NzgiLCJlbWFpbCI6InRhbmFrYS55dWtpQGV4YW1wbGUuY29tIiwiaWF0IjoxNzM0MjU4NjQ1LCJleHAiOjE3MzQyNjIyNDV9.access_token_signature"
        refreshToken:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI3ZjJhNGI4ZS0xMjM0LTU2NzgtOTBhYi1jZGVmMTIzNDU2NzgiLCJ0eXBlIjoicmVmcmVzaCIsImlhdCI6MTczNDI1ODY0NX0.refresh_token_signature"
        expiresIn:
          type: integer
          example: 3600
        user:
          $ref: '#/components/schemas/User'

    User:
      type: object
      example:
        id: "7f2a4b8e-1234-5678-90ab-cdef12345678"
        email: "tanaka.yuki@example.com"
        name: "田中 由紀"
        createdAt: "2023-01-15T08:00:00.000Z"
        storageQuota: 107374182400
        storageUsed: 45678901234
      properties:
        id:
          type: string
          format: uuid
          example: "7f2a4b8e-1234-5678-90ab-cdef12345678"
        email:
          type: string
          format: email
          example: "tanaka.yuki@example.com"
        name:
          type: string
          example: "田中 由紀"
        createdAt:
          type: string
          format: date-time
          example: "2023-01-15T08:00:00.000Z"
        storageQuota:
          type: integer
          description: Storage quota in bytes
          example: 107374182400
        storageUsed:
          type: integer
          description: Storage used in bytes
          example: 45678901234

    MediaItem:
      type: object
      example:
        id: "a1b2c3d4-1234-5678-90ab-cdef12345678"
        userId: "7f2a4b8e-1234-5678-90ab-cdef12345678"
        type: "photo"
        filename: "a1b2c3d4-1234-5678-90ab-cdef12345678.jpg"
        originalFilename: "DSC_4892.jpg"
        mimeType: "image/jpeg"
        size: 8547632
        width: 6000
        height: 4000
        duration: null
        description: "娘の入学式での記念撮影"
        tags: ["桜", "春", "家族写真", "2024年"]
        location:
          latitude: 35.0116
          longitude: 135.7681
          placeName: "京都府京都市下京区七条通烏丸西入東塩小路町"
        metadata:
          camera: "NIKON D850"
          lens: "NIKKOR Z 24-70mm f/2.8 S"
          iso: 400
          aperture: 5.6
          shutterSpeed: "1/250"
          focalLength: 50
        storageClass: "STANDARD"
        storageStatus: "ACTIVE"
        thumbnailUrl: "https://pixvault-media.s3.ap-northeast-1.amazonaws.com/users/7f2a4b8e-1234-5678-90ab-cdef12345678/media/a1b2c3d4-1234-5678-90ab-cdef12345678/thumbnail.jpg"
        previewUrl: "https://pixvault-media.s3.ap-northeast-1.amazonaws.com/users/7f2a4b8e-1234-5678-90ab-cdef12345678/media/a1b2c3d4-1234-5678-90ab-cdef12345678/preview.jpg"
        originalUrl: "https://pixvault-media.s3.ap-northeast-1.amazonaws.com/users/7f2a4b8e-1234-5678-90ab-cdef12345678/media/a1b2c3d4-1234-5678-90ab-cdef12345678/original.jpg"
        capturedAt: "2024-04-08T09:30:00.000Z"
        uploadedAt: "2024-04-08T14:15:30.123Z"
        archivedAt: null
        lastAccessedAt: "2024-12-15T10:00:00.000Z"
      properties:
        id:
          type: string
          format: uuid
          example: "a1b2c3d4-1234-5678-90ab-cdef12345678"
        userId:
          type: string
          format: uuid
          example: "7f2a4b8e-1234-5678-90ab-cdef12345678"
        type:
          type: string
          enum: [photo, video]
          example: "photo"
        filename:
          type: string
          example: "a1b2c3d4-1234-5678-90ab-cdef12345678.jpg"
        originalFilename:
          type: string
          example: "DSC_4892.jpg"
        mimeType:
          type: string
          example: "image/jpeg"
        size:
          type: integer
          description: File size in bytes
          example: 8547632
        width:
          type: integer
          example: 6000
        height:
          type: integer
          example: 4000
        duration:
          type: number
          description: Video duration in seconds
          example: null
        description:
          type: string
          example: "娘の入学式での記念撮影"
        tags:
          type: array
          items:
            type: string
          example: ["桜", "春", "家族写真", "2024年"]
        location:
          type: object
          properties:
            latitude:
              type: number
              example: 35.0116
            longitude:
              type: number
              example: 135.7681
            placeName:
              type: string
              example: "京都府京都市下京区七条通烏丸西入東堤町"
        metadata:
          type: object
          properties:
            camera:
              type: string
              example: "NIKON D850"
            lens:
              type: string
              example: "NIKKOR Z 24-70mm f/2.8 S"
            iso:
              type: integer
              example: 400
            aperture:
              type: number
              example: 5.6
            shutterSpeed:
              type: string
              example: "1/250"
            focalLength:
              type: number
              example: 50
        storageClass:
          type: string
          enum: [STANDARD, GLACIER, DEEP_ARCHIVE]
          example: "STANDARD"
        storageStatus:
          type: string
          enum: [ACTIVE, ARCHIVING, ARCHIVED, RESTORING]
          example: "ACTIVE"
        thumbnailUrl:
          type: string
          example: "https://pixvault-media.s3.ap-northeast-1.amazonaws.com/users/7f2a4b8e-1234-5678-90ab-cdef12345678/media/a1b2c3d4-1234-5678-90ab-cdef12345678/thumbnail.jpg"
        previewUrl:
          type: string
          example: "https://pixvault-media.s3.ap-northeast-1.amazonaws.com/users/7f2a4b8e-1234-5678-90ab-cdef12345678/media/a1b2c3d4-1234-5678-90ab-cdef12345678/preview.jpg"
        originalUrl:
          type: string
          example: "https://pixvault-media.s3.ap-northeast-1.amazonaws.com/users/7f2a4b8e-1234-5678-90ab-cdef12345678/media/a1b2c3d4-1234-5678-90ab-cdef12345678/original.jpg"
        capturedAt:
          type: string
          format: date-time
          example: "2024-04-08T09:30:00.000Z"
        uploadedAt:
          type: string
          format: date-time
          example: "2024-04-08T14:15:30.123Z"
        archivedAt:
          type: string
          format: date-time
          example: null
        lastAccessedAt:
          type: string
          format: date-time
          example: "2024-12-15T10:00:00.000Z"


    StorageStats:
      type: object
      example:
        totalSize: 45678901234
        standardSize: 12345678901
        glacierSize: 23456789012
        deepArchiveSize: 9876433321
        mediaCount:
          total: 4523
          photos: 3892
          videos: 631
        monthlyCost:
          storage: 12.45
          retrieval: 2.80
          transfer: 0.95
          total: 16.20
      properties:
        totalSize:
          type: integer
          description: Total storage used in bytes
          example: 45678901234
        standardSize:
          type: integer
          description: Size in standard storage
          example: 12345678901
        glacierSize:
          type: integer
          description: Size in Glacier storage
          example: 23456789012
        deepArchiveSize:
          type: integer
          description: Size in Deep Archive storage
          example: 9876433321
        mediaCount:
          type: object
          properties:
            total:
              type: integer
              example: 4523
            photos:
              type: integer
              example: 3892
            videos:
              type: integer
              example: 631
        monthlyCost:
          type: object
          properties:
            storage:
              type: number
              example: 12.45
            retrieval:
              type: number
              example: 2.80
            transfer:
              type: number
              example: 0.95
            total:
              type: number
              example: 16.20

    Job:
      type: object
      example:
        id: "job_archive_20241215_a1b2c3d4"
        type: "ARCHIVE"
        status: "PROCESSING"
        progress: 65.5
        mediaId: "a1b2c3d4-1234-5678-90ab-cdef12345678"
        result:
          archiveId: "arn:aws:glacier:ap-northeast-1:123456789012:vaults/pixvault-media/archives/a1b2c3d4-1234-5678-90ab-cdef12345678"
          checksum: "e1f2d85b0f6a8c9d3b4a5c6e7f8g9h0i"
        error: null
        startedAt: "2024-12-15T10:30:00.000Z"
        completedAt: null
        estimatedCompletionTime: "2024-12-15T11:45:00.000Z"
      properties:
        id:
          type: string
          example: "job_archive_20241215_a1b2c3d4"
        type:
          type: string
          enum: [ARCHIVE, RESTORE, THUMBNAIL_GENERATION, VIDEO_PROCESSING]
          example: "ARCHIVE"
        status:
          type: string
          enum: [PENDING, PROCESSING, COMPLETED, FAILED]
          example: "PROCESSING"
        progress:
          type: number
          minimum: 0
          maximum: 100
          example: 65.5
        mediaId:
          type: string
          format: uuid
          example: "a1b2c3d4-1234-5678-90ab-cdef12345678"
        result:
          type: object
          example:
            archiveId: "arn:aws:glacier:ap-northeast-1:123456789012:vaults/pixvault-media/archives/a1b2c3d4-1234-5678-90ab-cdef12345678"
            checksum: "e1f2d85b0f6a8c9d3b4a5c6e7f8g9h0i"
        error:
          type: string
          example: null
        startedAt:
          type: string
          format: date-time
          example: "2024-12-15T10:30:00.000Z"
        completedAt:
          type: string
          format: date-time
          example: null
        estimatedCompletionTime:
          type: string
          format: date-time
          example: "2024-12-15T11:45:00.000Z"

    Pagination:
      type: object
      example:
        page: 2
        limit: 50
        total: 4523
        totalPages: 91
      properties:
        page:
          type: integer
          example: 2
        limit:
          type: integer
          example: 50
        total:
          type: integer
          example: 4523
        totalPages:
          type: integer
          example: 91

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

tags:
  - name: System
    description: System endpoints
  - name: Authentication
    description: User authentication and registration
  - name: Media
    description: Photo and video management
  - name: Storage
    description: Storage management and statistics
  - name: Jobs
    description: Background job monitoring